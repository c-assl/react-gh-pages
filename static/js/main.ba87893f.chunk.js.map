{"version":3,"sources":["logo.svg","content.mdx","App.js","reportWebVitals.js","index.js"],"names":["Box","style","padding","backgroundColor","layoutProps","MDXContent","components","props","mdxType","parentName","color","isMDXComponent","App","className","src","logo","alt","to","path","About","Topics","Home","href","target","rel","match","useRouteMatch","url","Topic","topicId","useParams","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAAe,G,MAAA,IAA0B,kC,qCCO5BA,EAAM,kBAAM,mBAAKC,MAAO,CACnCC,QAAS,GACTC,gBAAiB,aAGbC,EAAc,CAClBJ,OAGa,SAASK,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,uCACA,gCAAe,sBAAQC,WAAW,KAAnB,YAAf,SAAqE,oBAAMR,MAAO,CAC9ES,MAAO,QAD0D,OAArE,UAGA,YAAC,EAAD,CAAKF,QAAQ,SAKjBH,EAAWM,gBAAiB,E,WCfb,SAASC,IACtB,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SAEzC,cAAC,IAAD,UACE,gCACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,UAAT,yBAIJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,UAAZ,SACE,cAACE,EAAD,MAEF,cAAC,IAAD,CAAOF,KAAK,IAAZ,SACE,cAACG,EAAD,cAMR,mBACER,UAAU,WACVS,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,8BAaR,SAASH,IACP,OAAO,sDAGT,SAASF,IACP,OAAO,uCAGT,SAASC,IACP,IAAIK,EAAQC,cAEZ,OACE,gCACE,wCAEA,+BACE,6BACE,cAAC,IAAD,CAAMT,GAAE,UAAKQ,EAAME,IAAX,eAAR,0BAEF,6BACE,cAAC,IAAD,CAAMV,GAAE,UAAKQ,EAAME,IAAX,kBAAR,iCAUJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOT,KAAI,UAAKO,EAAMP,KAAX,aAAX,SACE,cAACU,EAAD,MAEF,cAAC,IAAD,CAAOV,KAAMO,EAAMP,KAAnB,SACE,gEAOV,SAASU,IACP,IAAMC,EAAYC,cAAZD,QACN,OACE,gCACE,sDAAyBA,KACzB,cAAC,EAAD,OC9GN,IAYeE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ba87893f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const Box = () => <div style={{\n  padding: 20,\n  backgroundColor: 'tomato'\n}} />;\n\nconst layoutProps = {\n  Box\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`Hello, world!`}</h1>\n    <p>{`This is `}<strong parentName=\"p\">{`markdown`}</strong>{` with `}<span style={{\n        color: \"red\"\n      }}>{`JSX`}</span>{`: MDX!`}</p>\n    <Box mdxType=\"Box\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import logo from './logo.svg';\nimport './App.css';\n\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\n\n/* eslint-disable import/no-webpack-loader-syntax */\nimport Content from '!babel-loader!@mdx-js/loader!./content.mdx'\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n        <Router>\n          <div>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/about\">About</Link>\n              </li>\n              <li>\n                <Link to=\"/topics\">Topics</Link>\n              </li>\n            </ul>\n\n            <Switch>\n              <Route path=\"/about\">\n                <About />\n              </Route>\n              <Route path=\"/topics\">\n                <Topics />\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nfunction Home() {\n  return <h2>Retour Ã  bon port</h2>;\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Topics() {\n  let match = useRouteMatch();\n\n  return (\n    <div>\n      <h2>Topics</h2>\n\n      <ul>\n        <li>\n          <Link to={`${match.url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/props-v-state`}>\n            Props v. State\n          </Link>\n        </li>\n      </ul>\n\n      {/* The Topics page has its own <Switch> with more routes\n          that build on the /topics URL path. You can think of the\n          2nd <Route> here as an \"index\" page for all topics, or\n          the page that is shown when no topic is selected */}\n      <Switch>\n        <Route path={`${match.path}/:topicId`}>\n          <Topic />\n        </Route>\n        <Route path={match.path}>\n          <h3>Please select a topic.</h3>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction Topic() {\n  let { topicId } = useParams();\n  return (\n    <div>\n      <h3>Requested topic ID: {topicId}</h3> \n      <Content />\n    </div>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}